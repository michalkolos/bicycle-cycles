version: '2.1'

volumes:
  db-backups:
  db-data:

services:
  db:
  #Use tagged versions because successive minor versions of PostgreSQL 
  #write their database clusters into different database directories - which 
  #will cause the database to appear to be empty if using persistent 
  #volumes for database storage.
    image: kartoza/postgis:14-3.2
    volumes:
      - db-data:/var/lib/postgresql
      #- ${PWD}/volume:/var/lib/postgresql
    environment:
      - POSTGRES_DB=cyclesdb
      - POSTGRES_USER=cyclesuser
      - POSTGRES_PASS=cyclespass
      - ALLOW_IP_RANGE=0.0.0.0/0
      #- POSTGRES_MULTIPLE_EXTENSIONS=postgis,hstore,postgis_topology,postgis_raster,pgrouting
      #- POSTGRES_MULTIPLE_EXTENSIONS=postgis,hstore,postgis_topology
    ports:
      - 25432:5432
    restart: on-failure
    healthcheck:
      test: "exit 0"

  #dbbackups:
    #image: kartoza/pg-backup:latest
    #volumes:
      #- db-backups:/backups
    #environment:
      #- DUMPPREFIX=PG_gis
      #- POSTGRES_HOST=cyclesDb
      #- POSTGRES_USER=cyclesUser
      #- POSTGRES_PASS=cyclesPass
      #- POSTGRES_PORT=5432
     #- CRON_SCHEDULE="*/1 * * * *"
    #restart: on-failure
    #depends_on:
      #db:
        #condition: service_healthy
